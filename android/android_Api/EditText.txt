
【EditText字符限制】


如何设置EditText，使得只能输入数字或者某些字母呢？

一、设置EditText，只输入数字：

========方法1：直接生成DigitsKeyListener对象就可以了。

et_1.setKeyListener(new DigisKeyListener(false,true));

========方法2：在EditText中设置属性，android:numeric="integer"即只能输入整数，如下 

<EditText
android:singleLine="true"
android:numeric="integer"
/>

========方法3：新建一个char[]，在里面添加允许输入的字符。如下
editText.setKeyListener(new NumberKeyListener(){
      protected char[] getAcceptedChars()
{
 char[] numberChars[]={'1','2','3','4','5','6','7','8','9','0',};
return numberChars;
}

 @Override   //根据需要是否复写此方法
    public int getInputType() {  
        return android.text.InputType.TYPE_CLASS_PHONE;  
    }  

});

--------------------------------------------------------------------------------------------

小结：
第一种可以输入小数。
第二种由于设置了TYPE_CLASS_PHONE所以只能输入整数。且比较灵活。

============================================

很多网友可能在开发Android时发现EditText有时候需要限制用户输入的内容，通常我们可以使用正则表达式直接限制，但是Android 已经为我们准备好了EditText的输入类型，这样的比正则要有以下几点优势:

1. 开发更简单，执行速度高效。 

2. 输入法默认会根据情况变动，比如说设置为numeric后输入法会自动仅显示数字，不会出现Qwerty中的字母。

  下面我们通过EditText的layout xml文件中的相关属性来实现:

  1. 密码框属性 android:password="true"  这条可以让EditText显示的内容自动为 星号，输入时内容会在1秒内变成*字样。
  2. 纯数字 android:numeric="true" 这条可以让输入法自动变为数字输入键盘，同时仅允许0-9的数字输入
  3. 仅允许 android:capitalize="cwj1987" 这样仅允许接受输入cwj1987，一般用于密码验证

  下面是一些扩展的风格属性
  android:editable="false" 设置EditText不可编辑
  android:singleLine="true" 强制输入的内容在单行
  android:ellipsize="end" 自动隐藏尾部溢出数据，一般用于文字内容过长一行无法全部显示时。

//ps:还有一种方式android:digest="0123456789"; 这样只准输入数字了


【监听文本变化的另外一种方式】
editText 监听文本变化的另外一种方式 (详见android demo 的 BluetoothChat)

edittext.setOnEditorActionListener(mWriteListener);

// The action listener for the EditText widget, to listen for the return key
    private TextView.OnEditorActionListener mWriteListener =
        new TextView.OnEditorActionListener() {
        public boolean onEditorAction(TextView view, int actionId, KeyEvent event) {
            // If the action is a key-up event on the return key, send the message
            if (actionId == EditorInfo.IME_NULL && event.getAction() == KeyEvent.ACTION_UP) {
                String message = view.getText().toString();
                sendMessage(message);
            }
            if(D) Log.i(TAG, "END onEditorAction");
            return true;
        }
    };






